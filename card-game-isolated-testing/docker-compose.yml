services:
  # first Proxy Nginx server
  first-nginx:
    image: nginx:latest
    # profiles:
    #   - sslGroup
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/proxy.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl/:/etc/ssl/:ro
      # - ./certbot/www/:/var/www/certbot/:rw
      # - ./certbot/conf:/etc/letsencrypt/:ro
    ports:
      - 443:443
    depends_on:
      - frontend-nginx
      - backend-nginx

  # Frontend Nginx server
  frontend-nginx:
    image: nginx:latest
    # profiles:
    #   - sslGroup
    volumes:
      - frontend-dist:/usr/share/nginx/html
      - ./nginx/frontend.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl/:/etc/ssl/:ro
      # - ./certbot/www/:/var/www/certbot/:rw
      # - ./certbot/conf:/etc/letsencrypt/:ro
    ports:
      - 8443:8443
    # restart: always
    depends_on:
      - frontend-build

  # Backend Nginx server
  backend-nginx:
    image: nginx:latest
    # profiles:
    #   - sslGroup
    volumes:
      - ./nginx/backend.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl/:/etc/ssl/:ro
      # - ./certbot/www/:/var/www/certbot/:rw
      # - ./certbot/conf:/etc/letsencrypt/:ro
    ports:
      - 9443:9443
    # restart: always
    depends_on:
      - backend

  # certbot:
  #   image: certbot/certbot:latest
  #   profiles:
  #     - sslGroup
  #   volumes:
  #     - ./certbot/www/:/var/www/certbot/:rw
  #     - ./certbot/conf:/etc/letsencrypt/:rw
  # first: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $!; done;'"

  # Frontend Service
  frontend-build:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        VITE_IS_DOCKER: "yes"
        VITE_WEB_SERVER_URL: "https://api.uniwa-projects-genera.org"
        VITE_WEB_SERVER_PORT: "443"
    # ports:
    #   - "5173:5173"
    # environment:
    #   - VITE_IS_DOCKER=yes
    #   - VITE_WEB_SERVER_URL=http://backend
    #   - VITE_WEB_SERVER_PORT=3500
    volumes:
      - .:/app
      - /app/node_modules
      - frontend-dist:/app/dist
    # command: npm run build
    depends_on:
      - backend

  # Backend (Express.js) server
  backend:
    image: jimzord204/genera-web-server:latest
    ports:
      - "3500:3500"
    environment:
      - PORT=3500
      - IS_PRODUCTION=no
      - IS_DOCKER=yes
      - DB_HOST=db
      - DB_USER=root
      - DB_PASSWORD=__SuPeRSecretP@ssw0rd!__
      - DB_NAME=genera-game-v3
    command: npm start
    depends_on:
      - db

  # MySQL database
  db:
    image: mysql:latest
    ports:
      - "3307:3306" # Change the host port from 3306 to 3307
    environment:
      MYSQL_ROOT_PASSWORD: __SuPeRSecretP@ssw0rd!__
      MYSQL_DATABASE: genera-game-v3
    volumes:
      - db-data:/var/lib/mysql
      - ./sql/dev/1_schema.sql:/docker-entrypoint-initdb.d/1_schema.sql:ro
      - ./sql/dev/2_init-data.sql:/docker-entrypoint-initdb.d/2_init-data.sql:ro

# This must be at the top level of the file
volumes:
  db-data:
  frontend-dist:
